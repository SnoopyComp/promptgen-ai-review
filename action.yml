name: "PromptGen AI Review"
description: "PR 마커/이슈/Reference(설계문서/다이어그램 등)를 수집·요약해 LLM 코드리뷰용 프롬프트를 생성합니다."
author: "your-org"
branding:
  icon: file-text
  color: purple

inputs:
  mode:
    description: "리뷰 강도: deep|quick"
    default: "quick"
  read_issue:
    description: "이슈 수집 여부: true|false|auto"
    default: "auto"
  reference_glob_allowlist:
    description: "허용할 Reference 경로 글롭"
    default: "docs/**/*.{puml,plantuml,mermaid,mmd,md,mdx,adoc,txt,yml,yaml,json,proto,uml}"
  max_bytes_per_section:
    description: "섹션별 바이트 상한(바이트)"
    default: "50000"

outputs:
  prompt_path:
    description: "생성된 프롬프트 파일 경로"
    value: ${{ steps.out.outputs.prompt_path }}
  prompt_preview:
    description: "프롬프트 앞부분(로그 확인용)"
    value: ${{ steps.out.outputs.prompt_preview }}
  meta_json:
    description: "수집 메타데이터(JSON)"
    value: ${{ steps.out.outputs.meta_json }}

runs:
  using: "composite"
  steps:
    - name: Prepare workspace
      shell: bash
      run: |
        set -euo pipefail
        mkdir -p out
        echo "{}" > out/meta.json

    - name: Parse PR markers
      id: parse
      shell: bash
      env:
        EVENT_PATH: ${{ github.event_path }}
      run: |
        set -euo pipefail
        bash "${{ github.action_path }}/scripts/parse_markers.sh" "$EVENT_PATH" > markers.env
        cat markers.env

    - name: Collect context (Issue/References/PR)
      id: collect
      shell: bash
      env:
        INPUT_MODE: ${{ inputs.mode }}
        INPUT_READ_ISSUE: ${{ inputs.read_issue }}
        INPUT_REF_ALLOW: ${{ inputs.reference_glob_allowlist }}
        INPUT_MAX_BYTES: ${{ inputs.max_bytes_per_section }}
        GH_TOKEN: ${{ github.token }}
        EVENT_PATH: ${{ github.event_path }}
      run: |
        set -euo pipefail
        bash "${{ github.action_path }}/scripts/collect_context.sh" markers.env "$EVENT_PATH"

    - name: Build prompt
      id: build
      shell: bash
      env:
        INPUT_MODE: ${{ inputs.mode }}
      run: |
        set -euo pipefail
        bash "${{ github.action_path }}/scripts/build_prompt.sh"

    - name: Set outputs
      id: out
      shell: bash
      run: |
        set -euo pipefail
        echo "prompt_path=$(pwd)/out/PROMPT.md" >> "$GITHUB_OUTPUT"
        head -c 2000 out/PROMPT.md > out/preview.txt || true
        {
          echo "prompt_preview<<EOF"
          cat out/preview.txt
          echo "EOF"
        } >> "$GITHUB_OUTPUT"
        META_MIN=$(tr -d '\n' < out/meta.json | sed 's/"/\\"/g')
        echo "meta_json=$META_MIN" >> "$GITHUB_OUTPUT"
