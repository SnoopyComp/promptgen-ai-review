name: "LLM Review Prompt Action (Composite Bash)"
description: "Build a prompt for LLM code review from PR + Issue + reference files using bash scripts"
author: "you"
runs:
using: "composite"


inputs:
output-file:
description: "Relative path to write the assembled prompt markdown."
required: false
default: "llm_review_prompt.md"
max-bytes-pr:
description: "Maximum bytes to include from PR body."
required: false
default: "100000"
max-bytes-issue:
description: "Maximum bytes to include from each Issue body."
required: false
default: "80000"
max-bytes-ref:
description: "Maximum bytes to include from each Reference file."
required: false
default: "120000"
fail-on-missing-ref:
description: "Fail the action if any reference file is missing."
required: false
default: "false"


outputs:
prompt:
description: "The assembled prompt text"
value: ${{ steps.finalize.outputs.prompt }}
prompt-path:
description: "Written prompt file path"
value: ${{ steps.finalize.outputs.prompt-path }}


branding:
icon: "book-open"
color: "purple"


steps:
- name: Prepare workdir
id: prep
shell: bash
run: |
set -euo pipefail
echo "workdir=${RUNNER_TEMP}/llm_prompt" >> "$GITHUB_OUTPUT"


- name: Read PR from event payload
shell: bash
env:
WORKDIR: ${{ steps.prep.outputs.workdir }}
run: |
set -euo pipefail
bash "$GITHUB_ACTION_PATH/scripts/10_read_pr.sh"


- name: Extract issue numbers
shell: bash
env:
WORKDIR: ${{ steps.prep.outputs.workdir }}
run: |
set -euo pipefail
bash "$GITHUB_ACTION_PATH/scripts/20_extract_issue_numbers.sh"


- name: Extract reference paths
shell: bash
env:
WORKDIR: ${{ steps.prep.outputs.workdir }}
run: |
set -euo pipefail
bash "$GITHUB_ACTION_PATH/scripts/30_extract_reference_paths.sh"


- name: Fetch issues
shell: bash
env:
WORKDIR: ${{ steps.prep.outputs.workdir }}
MAX_ISSUE: ${{ inputs.max-bytes-issue }}
GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
run: |
set -euo pipefail
bash "$GITHUB_ACTION_PATH/scripts/40_fetch_issues.sh"
} >> "$GITHUB_OUTPUT"